# -*- coding: utf-8 -*-
"""decision_tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P7u2ngX2zW_4pGahOodTzbZOZWYhFnNc
"""

# src/models/decision_tree.py
from sklearn.tree import DecisionTreeClassifier
from .base_model import BaseModel

class DecisionTree(BaseModel):
  def __init__(self, random_state=42, criterion= 'entropy', max_depth= 3, min_samples_split=2, cv=5):
    super().__init__("Decision Tree")
    self.model = DecisionTreeClassifier(**(params or {}))

# src/models/random_forest.py
from sklearn.ensemble import RandomForestClassifier
from .base_model import BaseModel

class RandomForest(BaseModel):
  def __init__(self, n_estimators=100, random_state=42):
    super().__init__("Random Forest")
    self.model = RandomForestClassifier(**(params or {}))

# src/models/xgboost_model.py
from xgboost import XGBClassifier
from .base_model import BaseModel

class XGBoost(BaseModel):
  def __init__(self, n_estimators=100, max_depth=3, learning_rate=0.1, random_state=42):
    super().__init__("XGBoost")
    self.model = XGBClassifier(**(params or {}))

# test/test_loader.py
from src.data.loader import load_data

def test_load_data():
  df = load_data("data/train.csv")
  assert df.shape[0] > 0
  assert "Survived" in df.columns